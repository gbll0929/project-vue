{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\拜尔\\上海拜耳口腔\\DoctorO2O\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\拜尔\\上海拜耳口腔\\DoctorO2O\\src\\components\\identify.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\拜尔\\上海拜耳口腔\\DoctorO2O\\src\\components\\identify.vue","mtime":1577876120000},{"path":"C:\\Users\\Administrator\\Desktop\\拜尔\\上海拜耳口腔\\DoctorO2O\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577497056000},{"path":"C:\\Users\\Administrator\\Desktop\\拜尔\\上海拜耳口腔\\DoctorO2O\\node_modules\\babel-loader\\lib\\index.js","mtime":1577497138000},{"path":"C:\\Users\\Administrator\\Desktop\\拜尔\\上海拜耳口腔\\DoctorO2O\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577497056000},{"path":"C:\\Users\\Administrator\\Desktop\\拜尔\\上海拜耳口腔\\DoctorO2O\\node_modules\\vue-loader\\lib\\index.js","mtime":1577497122000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n\nexport default{\n  name: 'SIdentify',\n  props: {\n    identifyCode: {\n      type: String,\n      default: '1234'\n    },\n    fontSizeMin: {\n      type: Number,\n      default: 16\n    },\n    fontSizeMax: {\n      type: Number,\n      default: 40\n    },\n    backgroundColorMin: {\n      type: Number,\n      default: 180\n    },\n    backgroundColorMax: {\n      type: Number,\n      default: 240\n    },\n    colorMin: {\n      type: Number,\n      default: 50\n    },\n    colorMax: {\n      type: Number,\n      default: 160\n    },\n    lineColorMin: {\n      type: Number,\n      default: 40\n    },\n    lineColorMax: {\n      type: Number,\n      default: 180\n    },\n    dotColorMin: {\n      type: Number,\n      default: 0\n    },\n    dotColorMax: {\n      type: Number,\n      default: 255\n    },\n    contentWidth: {\n      type: Number,\n      default: 110\n    },\n    contentHeight: {\n      type: Number,\n      default: 35\n    }\n  },\n  methods: {\n    // 生成一个随机数\n    randomNum (min, max) {\n      return Math.floor(Math.random() * (max - min) + min)\n    },\n    // 生成一个随机的颜色\n    randomColor (min, max) {\n      let r = this.randomNum(min, max)\n      let g = this.randomNum(min, max)\n      let b = this.randomNum(min, max)\n      return 'rgb(' + r + ',' + g + ',' + b + ')'\n    },\n    drawPic () {\n      let canvas = document.getElementById('s-canvas')\n      let ctx = canvas.getContext('2d')\n      ctx.textBaseline = 'bottom'\n      // 绘制背景\n      ctx.fillStyle = this.randomColor(this.backgroundColorMin, this.backgroundColorMax)\n      ctx.fillRect(0, 0, this.contentWidth, this.contentHeight)\n      // 绘制文字\n      for (let i = 0; i < this.identifyCode.length; i++) {\n        this.drawText(ctx, this.identifyCode[i], i)\n      }\n      this.drawLine(ctx)\n      this.drawDot(ctx)\n    },\n    drawText (ctx, txt, i) {\n      ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax)\n      ctx.font = this.randomNum(this.fontSizeMin, this.fontSizeMax) + 'px SimHei'\n      let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1))\n      let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5)\n      var deg = this.randomNum(-45, 45)\n      // 修改坐标原点和旋转角度\n      ctx.translate(x, y)\n      ctx.rotate(deg * Math.PI / 180)\n      ctx.fillText(txt, 0, 0)\n      // 恢复坐标原点和旋转角度\n      ctx.rotate(-deg * Math.PI / 180)\n      ctx.translate(-x, -y)\n    },\n    drawLine (ctx) {\n      // 绘制干扰线\n      for (let i = 0; i < 8; i++) {\n        ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax)\n        ctx.beginPath()\n        ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\n        ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\n        ctx.stroke()\n      }\n    },\n    drawDot (ctx) {\n      // 绘制干扰点\n      for (let i = 0; i < 100; i++) {\n        ctx.fillStyle = this.randomColor(0, 255)\n        ctx.beginPath()\n        ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI)\n        ctx.fill()\n      }\n    }\n  },\n  watch: {\n    identifyCode () {\n      this.drawPic()\n    }\n  },\n  mounted () {\n    this.drawPic()\n  }\n}\n",{"version":3,"sources":["identify.vue"],"names":[],"mappingsfile":"identify.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"s-canvas\">\n    <canvas id=\"s-canvas\" :width=\"contentWidth\" :height=\"contentHeight\"></canvas>\n  </div>\n</template>\n<script>\n  export default{\n    name: 'SIdentify',\n    props: {\n      identifyCode: {\n        type: String,\n        default: '1234'\n      },\n      fontSizeMin: {\n        type: Number,\n        default: 16\n      },\n      fontSizeMax: {\n        type: Number,\n        default: 40\n      },\n      backgroundColorMin: {\n        type: Number,\n        default: 180\n      },\n      backgroundColorMax: {\n        type: Number,\n        default: 240\n      },\n      colorMin: {\n        type: Number,\n        default: 50\n      },\n      colorMax: {\n        type: Number,\n        default: 160\n      },\n      lineColorMin: {\n        type: Number,\n        default: 40\n      },\n      lineColorMax: {\n        type: Number,\n        default: 180\n      },\n      dotColorMin: {\n        type: Number,\n        default: 0\n      },\n      dotColorMax: {\n        type: Number,\n        default: 255\n      },\n      contentWidth: {\n        type: Number,\n        default: 110\n      },\n      contentHeight: {\n        type: Number,\n        default: 35\n      }\n    },\n    methods: {\n      // 生成一个随机数\n      randomNum (min, max) {\n        return Math.floor(Math.random() * (max - min) + min)\n      },\n      // 生成一个随机的颜色\n      randomColor (min, max) {\n        let r = this.randomNum(min, max)\n        let g = this.randomNum(min, max)\n        let b = this.randomNum(min, max)\n        return 'rgb(' + r + ',' + g + ',' + b + ')'\n      },\n      drawPic () {\n        let canvas = document.getElementById('s-canvas')\n        let ctx = canvas.getContext('2d')\n        ctx.textBaseline = 'bottom'\n        // 绘制背景\n        ctx.fillStyle = this.randomColor(this.backgroundColorMin, this.backgroundColorMax)\n        ctx.fillRect(0, 0, this.contentWidth, this.contentHeight)\n        // 绘制文字\n        for (let i = 0; i < this.identifyCode.length; i++) {\n          this.drawText(ctx, this.identifyCode[i], i)\n        }\n        this.drawLine(ctx)\n        this.drawDot(ctx)\n      },\n      drawText (ctx, txt, i) {\n        ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax)\n        ctx.font = this.randomNum(this.fontSizeMin, this.fontSizeMax) + 'px SimHei'\n        let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1))\n        let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5)\n        var deg = this.randomNum(-45, 45)\n        // 修改坐标原点和旋转角度\n        ctx.translate(x, y)\n        ctx.rotate(deg * Math.PI / 180)\n        ctx.fillText(txt, 0, 0)\n        // 恢复坐标原点和旋转角度\n        ctx.rotate(-deg * Math.PI / 180)\n        ctx.translate(-x, -y)\n      },\n      drawLine (ctx) {\n        // 绘制干扰线\n        for (let i = 0; i < 8; i++) {\n          ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax)\n          ctx.beginPath()\n          ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\n          ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\n          ctx.stroke()\n        }\n      },\n      drawDot (ctx) {\n        // 绘制干扰点\n        for (let i = 0; i < 100; i++) {\n          ctx.fillStyle = this.randomColor(0, 255)\n          ctx.beginPath()\n          ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI)\n          ctx.fill()\n        }\n      }\n    },\n    watch: {\n      identifyCode () {\n        this.drawPic()\n      }\n    },\n    mounted () {\n      this.drawPic()\n    }\n  }\n</script>"]}]}